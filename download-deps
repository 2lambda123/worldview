#!/bin/bash

set -e

VERSION_YUI_COMPRESSOR="2.4.7"
VERSION_YUI_COMPRESSOR_ANT="0.5"
VERSION_JSDOC="3.0.1"

PACKAGES=~/local/packages
ARTIFACTS=~/local/artifacts
TMP=~/local/tmp

RELEASE_YUI_COMPRESSOR="yuicompressor-$VERSION_YUI_COMPRESSOR"
ARTIFACT_YUI_COMPRESSOR="$RELEASE_YUI_COMPRESSOR.zip"
DIST_YUI_COMPRESSOR="https://github.com/downloads/yui/yuicompressor/$ARTIFACT_YUI_COMPRESSOR"

RELEASE_YUI_COMPRESSOR_ANT="yui-compressor-ant-task-$VERSION_YUI_COMPRESSOR_ANT"
ARTIFACT_YUI_COMPRESSOR_ANT="$RELEASE_YUI_COMPRESSOR_ANT.zip"
DIST_YUI_COMPRESSOR_ANT="http://javaflight-code.googlecode.com/files/yui-compressor-ant-task-0.5.zip"

RELEASE_JSDOC="jsdoc-$VERSION_JSDOC"
ARTIFACT_JSDOC="$RELEASE_JSDOC.tar.gz"
DIST_JSDOC="https://github.com/jsdoc3/jsdoc/archive/v${VERSION_JSDOC}.tar.gz"

RELEASE_JSDOC_ANT="jsdoc3-ant-task"
GIT_JSDOC_ANT="https://github.com/jannon/jsdoc3-ant-task"

mkdir -p "$PACKAGES"
mkdir -p "$ARTIFACTS"
mkdir -p "$TMP"

if [ ! -e "$ARTIFACTS/$ARTIFACT_YUI_COMPRESSOR" ] ; then
    echo "Downloading $RELEASE_YUI_COMPRESSOR"
    ( cd "$ARTIFACTS"; curl -O -L "$DIST_YUI_COMPRESSOR" )
fi

if [ ! -e "$PACKAGES/$RELEASE_YUI_COMPRESSOR" ] ; then
    echo "Unpacking $RELEASE_YUI_COMPRESSOR"
    ( cd "$PACKAGES"; unzip "$ARTIFACTS/$ARTIFACT_YUI_COMPRESSOR" > /dev/null )
fi

if [ ! -e "$ARTIFACTS/$ARTIFACT_YUI_COMPRESSOR_ANT" ] ; then
    echo "Downloading $RELEASE_YUI_COMPRESSOR_ANT"
    ( cd "$ARTIFACTS"; curl -O -L "$DIST_YUI_COMPRESSOR_ANT" )
fi

if [ ! -e "$PACKAGES/$RELEASE_YUI_COMPRESSOR_ANT" ] ; then
    echo "Unpacking $RELEASE_YUI_COMPRESSOR_ANT"
    mkdir -p "$PACKAGES/yui-compressor-ant-task-0.5"
    ( cd "$PACKAGES/yui-compressor-ant-task-0.5"; \
	unzip "$ARTIFACTS/$ARTIFACT_YUI_COMPRESSOR_ANT" > /dev/null )
fi

if [ ! -e "$ARTIFACTS/$ARTIFACT_JSDOC" ] ; then
    echo "Downloading $RELEASE_JSDOC"
    ( cd "$ARTIFACTS"; curl -o $ARTIFACT_JSDOC -L "$DIST_JSDOC" )
fi

if [ ! -e "$PACKAGES/$RELEASE_JSDOC" ] ; then
    echo "Unpacking $RELEASE_JSDOC"
    ( cd "$PACKAGES"; tar xf "$ARTIFACTS/$ARTIFACT_JSDOC" > /dev/null )
fi

if [ ! -e "$PACKAGES/$RELEASE_JSDOC_ANT" ] ; then
    echo "Cloning $RELEASE_JSDOC_ANT"
    rm -rf "$TMP/$RELEASE_JSDOC_ANT"
    ( cd $TMP ; git clone "$GIT_JSDOC_ANT" )
    echo "Building $RELEASE_JSDOC_ANT"
    ant -f "$TMP"/$RELEASE_JSDOC_ANT/build.xml dist
    echo "Copying artifact"
    mkdir -p "$PACKAGES/$RELEASE_JSDOC_ANT"
    cp "$TMP/$RELEASE_JSDOC_ANT/build/jar"/*.jar "$PACKAGES/$RELEASE_JSDOC_ANT"
fi

rm -rf "$TMP"
