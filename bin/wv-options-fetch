#!/usr/bin/env python
#
# NASA Worldview
#
# This code was originally developed at NASA/Goddard Space Flight Center for
# the Earth Science Data and Information System (ESDIS) project.
#
# Copyright (C) 2013 - 2014 United States Government as represented by the
# Administrator of the National Aeronautics and Space Administration.
# All Rights Reserved.
#

from optparse import OptionParser
import os
import sys
import json
import urllib2 as urllib

prog = os.path.basename(__file__)
base_dir = os.path.join(os.path.dirname(__file__), "..")
version = "1.0.0"
help_description = """\
Fetches options from remote locations
"""

parser = OptionParser(usage="Usage: %s <config> <output_dir>" % prog,
                      version="%s version %s" % (prog, version),
                      epilog=help_description)

(options, args) = parser.parse_args()
if len(args) != 2:
    parser.error("Invalid number of arguments")

config_file = args[0]
output_dir = args[1]

os.makedirs(output_dir)

with open(config_file) as fp:
    config = json.load(fp)

def process_remote(entry):
    url = entry["from"]
    print "%s: %s" % (prog, url)
    response = urllib.urlopen(url)
    contents = response.read()
    output_file = os.path.join(output_dir, entry["to"])
    with open(output_file, "w") as fp:
        fp.write(contents)

remote_count = 0
error_count = 0
warning_count = 0

tolerant = config.get("tolerant", False)
if "wv-options-fetch" in config:
    for entry in config["wv-options-fetch"]:
        try:
            remote_count += 1
            process_remote(entry)
        except Exception as e:
            if tolerant:
                warning_count += 1
                sys.stderr.write("%s:   WARN: %s\n" % (prog, str(e)))
            else:
                error_count += 1
                sys.stderr.write("%s: ERROR: %s\n" % (prog, str(e)))

print "%s: %d error(s), %d remote(s)" % (prog, error_count, remote_count)

if error_count > 0:
    sys.exit(1)
